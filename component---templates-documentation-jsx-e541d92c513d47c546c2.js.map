{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-ocular/src/react/styled/example.js","webpack:///./node_modules/gatsby-theme-ocular/src/react/components/info-panel.jsx","webpack:///./templates/documentation.jsx"],"names":["PanelContainer","styled","main","props","theme","breakpoints","medium","Link","borders","border300","sizing","scale400","scale700","scale600","animation","timing400","easeInOutCurve","lighting","shadow600","colors","mono200","div","mono1000","typography","font300","white","shadow400","scale800","PanelTitle","h3","font450","scale300","PanelContent","momo800","font100","scale100","mono300","SourceLink","a","font250","mono800","PureComponent","CustomLinkWrapper","relativeLinks","href","startsWith","hrefWithoutLeadingSlash","slice","CustomPre","children","otherProps","React","Children","map","child","type","displayName","cloneElement","query","DocTemplate","pageContext","renderAst","rehypeReact","createElement","components","h1","H1","h2","H2","H3","h4","H4","h5","H5","h6","H6","p","P","ul","List","li","ListItem","pre","code","InlineCode","table","Table","th","TableHeaderCell","td","TableBodyCell","blockquote","BlockQuote","Compiler","state","render","htmlAst","this","data","docBySlug2","Component"],"mappings":"0RAiDaA,GA5CcC,IAAOC,KAAV,uEAAGD,CAAH,+CAQIA,IAAOC,KAAV,wEAAGD,CAAH,sFAGS,SAAAE,GAAK,OAAIA,EAAMC,MAAMC,YAAYC,UAKxCL,YAAOM,KAAV,uEAAGN,CAAH,+RACZ,SAAAE,GAAK,OAAIA,EAAMC,MAAMI,QAAQC,aAK7B,SAAAN,GAAK,OAAIA,EAAMC,MAAMM,OAAOC,YAC3B,SAAAR,GAAK,OAAIA,EAAMC,MAAMM,OAAOE,YAAY,SAAAT,GAAK,OAAIA,EAAMC,MAAMM,OAAOG,YAAY,SAAAV,GAAK,OAAIA,EAAMC,MAAMM,OAAOE,YAAY,SAAAT,GAAK,OAAIA,EAAMC,MAAMM,OAAOG,YAExI,SAAAV,GAAK,OAAIA,EAAMC,MAAMU,UAAUC,aACxB,SAAAZ,GAAK,OAAIA,EAAMC,MAAMU,UAAUE,kBAE7C,SAAAb,GAAK,OAAIA,EAAMC,MAAMa,SAASC,aAC9B,SAAAf,GAAK,OAAIA,EAAMC,MAAMe,OAAOC,WAKlBnB,IAAOoB,IAAV,wEAAGpB,CAAH,+GACd,SAAAE,GAAK,OAAIA,EAAMC,MAAMe,OAAOG,YAC7B,SAAAnB,GAAK,OAAIA,EAAMC,MAAMmB,WAAWC,WAQZvB,IAAOoB,IAAV,0EAAGpB,CAAH,+MACjB,SAAAE,GAAK,OAAIA,EAAMC,MAAMmB,WAAWC,WAK1B,SAAArB,GAAK,OAAIA,EAAMC,MAAMe,OAAOM,SAC5B,SAAAtB,GAAK,OAAIA,EAAMC,MAAMa,SAASS,aAClC,SAAAvB,GAAK,OAAIA,EAAMC,MAAMM,OAAOiB,YAC3B,SAAAxB,GAAK,OAAIA,EAAMC,MAAMM,OAAOC,YAAY,SAAAR,GAAK,OAAIA,EAAMC,MAAMM,OAAOiB,aASpEC,EAAa3B,IAAO4B,GAAV,sEAAG5B,CAAH,4BACb,SAAAE,GAAK,OAAIA,EAAMC,MAAMmB,WAAWO,WAC9B,SAAA3B,GAAK,OAAIA,EAAMC,MAAMM,OAAOqB,YAG3BC,EAAe/B,IAAOoB,IAAV,wEAAGpB,CAAH,wkBASZ,SAAAE,GAAK,OAAIA,EAAMC,MAAMe,OAAOc,WAKvB,SAAA9B,GAAK,OAAIA,EAAMC,MAAMe,OAAOM,SAClC,SAAAtB,GAAK,OAAIA,EAAMC,MAAMmB,WAAWW,WACzB,SAAA/B,GAAK,OAAIA,EAAMC,MAAMM,OAAOE,YAK9B,SAAAT,GAAK,OAAIA,EAAMC,MAAMM,OAAOyB,YAE/B,SAAAhC,GAAK,OAAIA,EAAMC,MAAMM,OAAOE,YAO7B,SAAAT,GAAK,OAAIA,EAAMC,MAAMe,OAAOiB,WAEvB,SAAAjC,GAAK,OAAIA,EAAMC,MAAMe,OAAOiB,WAGhC,SAAAjC,GAAK,OAAIA,EAAMC,MAAMI,QAAQC,aAEvB,SAAAN,GAAK,OAAIA,EAAMC,MAAMe,OAAOM,SAO3B,SAAAtB,GAAK,OAAIA,EAAMC,MAAMM,OAAOG,YAKpCwB,EAAapC,IAAOqC,EAAV,sEAAGrC,CAAH,uEAGP,SAAAE,GAAK,OAAIA,EAAMC,MAAMM,OAAOqB,YAClC,SAAA5B,GAAK,OAAIA,EAAMC,MAAMmB,WAAWgB,WAC/B,SAAApC,GAAK,OAAIA,EAAMC,MAAMe,OAAOqB,WCtHAC,gB,wPCuBvC,IAAMC,EAAoB,SAAAC,GASxB,OARmB,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAASzC,EAAW,cACvC,GAAIyC,EAAKC,WAAW,SAAWD,EAAKC,WAAW,KAE7C,OAAO,kBAAC,IAAD,eAAGD,KAAMA,GAAUzC,IAE5B,IAAM2C,EAA0BF,EAAKC,WAAW,KAAOD,EAAKG,MAAM,GAAKH,EACvE,OAAO,kBAAC,IAAD,iBAAOzC,EAAP,CAAcyC,KAAMD,EAAcG,QAKvCE,EAAY,SAAA7C,GAAS,IAIlB8C,EAA2B9C,EAA3B8C,SAAaC,EAJK,EAIS/C,EAJT,cAKzB,OACE,kBAAC,IAAQ+C,EACNC,IAAMC,SAASC,IAAIJ,GAAU,SAAAK,GAG5B,MACiB,SAAfA,EAAMC,MACqB,iBAA3BD,EAAMC,KAAKC,YAEJ,kBAAC,IAAcF,EAAMnD,OAGvBgD,IAAMM,aAAaH,QAQrBI,EAAK,aAaGC,E,oBACnB,WAAYxD,GAAQ,IAAD,EACjB,cAAMA,IAAN,KADiB,IAEVwC,EAAiBxC,EAAMyD,YAAvBjB,cAWDkB,EAAY,IAAIC,IAAY,CAChCC,cAAeZ,IAAMY,cACrBC,WAAY,CACVC,GAAIC,IACJC,GAAIC,IACJvC,GAAIwC,IACJC,GAAIC,IACJC,GAAIC,IACJC,GAAIC,IACJC,EAAGC,IACHC,GAAIC,IACJC,GAAIC,IACJC,IAAKlC,EACLmC,KAAMC,IACNC,MAAOC,IACPC,GAAIC,IACJC,GAAIC,IACJC,WAAYC,IACZtD,EAAGI,EAAkBC,MAEtBkD,SAjCc,OAkCjB,EAAKC,MAAQ,CAACjC,aAlCG,E,0GAqCnBkC,OAAA,WAAU,IACDC,EAAWC,KAAK9F,MAAM+F,KAAKC,WAA3BH,QACAnC,EAAaoC,KAAKH,MAAlBjC,UACP,OACE,6BACE,kBAAC,IAAD,KAAeA,EAAUmC,M,GA3CQ7C,IAAMiD","file":"component---templates-documentation-jsx-e541d92c513d47c546c2.js","sourcesContent":["import styled from 'styled-components';\nimport {Link} from 'gatsby';\n\n// example\n\nexport const MainExample = styled.main`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\n// examples\n\nexport const MainExamples = styled.main`\n  display: flex;\n  flex-wrap: wrap;\n  @media screen and (max-width: ${props => props.theme.breakpoints.medium}) {\n    padding-top: 96px;\n  }\n`;\n\nexport const ExampleCard = styled(Link)`\n  border: ${props => props.theme.borders.border300};\n  cursor: pointer;\n  text-decoration: none;\n  width: 200px;\n  outline: none;\n  margin: ${props => props.theme.sizing.scale400};\n  padding: ${props => props.theme.sizing.scale700} ${props => props.theme.sizing.scale600} ${props => props.theme.sizing.scale700} ${props => props.theme.sizing.scale600};\n  transition-property: background, border-color, box-shadow;\n  transition-duration: ${props => props.theme.animation.timing400};\n  transition-timing-function: ${props => props.theme.animation.easeInOutCurve};\n  &:hover {\n    box-shadow: ${props => props.theme.lighting.shadow600};\n    background: ${props => props.theme.colors.mono200};\n    border-color: transparent;\n  }\n`;\n\nexport const ExampleTitle = styled.div`\n  color: ${props => props.theme.colors.mono1000};\n  font: ${props => props.theme.typography.font300};\n  margin-bottom: 0;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  width: 150px;\n`;\n\nexport const PanelContainer = styled.div`\n  font: ${props => props.theme.typography.font300};\n  position: absolute;\n  top: 0;\n  right: 0;\n  width: 344px;\n  background: ${props => props.theme.colors.white};\n  box-shadow: ${props => props.theme.lighting.shadow400};\n  margin: ${props => props.theme.sizing.scale800};\n  padding: ${props => props.theme.sizing.scale400} ${props => props.theme.sizing.scale800};\n  max-height: 96%;\n  overflow-x: hidden;\n  overflow-y: auto;\n  overflow-y: overlay;\n  outline: none;\n  z-index: 1;\n`;\n\nexport const PanelTitle = styled.h3`\n  font: ${props => props.theme.typography.font450};\n  margin: ${props => props.theme.sizing.scale300} 0;\n`;\n\nexport const PanelContent = styled.div`\n  div >* {\n    vertical-align: middle;\n    white-space: nowrap;\n  }\n  div >label {\n    display: inline-block;\n    width: 40%;\n    margin-right: 10%;\n    color: ${props => props.theme.colors.momo800};\n    margin-top: 2px;\n    margin-bottom: 2px;\n  }\n  div >input, div >a, div >button, div >select {\n    background: ${props => props.theme.colors.white};\n    font: ${props => props.theme.typography.font100};\n    line-height: ${props => props.theme.sizing.scale700};\n    text-transform: none;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    display: inline-block;\n    padding: 0 ${props => props.theme.sizing.scale100};\n    width: 50%;\n    height: ${props => props.theme.sizing.scale700};\n    text-align: left;\n  }\n  div >button {\n    color: initial;\n  }\n  div >button:disabled {\n    color: ${props => props.theme.colors.mono300};\n    cursor: default;\n    background: ${props => props.theme.colors.mono300};\n  }\n  div >input {\n    border: ${props => props.theme.borders.border300};\n    &:disabled {\n      background: ${props => props.theme.colors.white};\n    }\n    &[type=\"checkbox\"] {\n      height: auto;\n    }\n  }\n  p {\n    margin-bottom: ${props => props.theme.sizing.scale600};\n    white-space: initial;\n  }\n`;\n\nexport const SourceLink = styled.a`\n  display: block;\n  text-align: right;\n  margin-top: ${props => props.theme.sizing.scale300};\n  font: ${props => props.theme.typography.font250};\n  color: ${props => props.theme.colors.mono800};\n`;\n","import React, {PureComponent} from 'react';\nimport {\n  PanelContainer,\n  PanelContent,\n  PanelTitle,\n  SourceLink\n} from '../styled/example';\n\nexport default class InfoPanel extends PureComponent {\n  render() {\n    const { title, children, sourceLink} = this.props;\n\n    return (\n      <PanelContainer>\n        <PanelTitle>{title}</PanelTitle>\n        <PanelContent>{children}</PanelContent>\n        <SourceLink href={sourceLink} target=\"_new\" >\n          View Code â†—\n        </SourceLink>\n      </PanelContainer>\n    );\n  }\n}\n","import React from 'react';\nimport rehypeReact from 'rehype-react';\nimport {graphql} from 'gatsby';\n\nimport \"katex/dist/katex.min.css\"\n\n// note - these typographic elements are taken directly from baseui.\n// we can consider customizing them by first importing in styled/index, then\n// giving them special parameters\n\nimport {\n  A,\n  CodeBlock,\n  H1,\n  H2,\n  H3,\n  H4,\n  H5,\n  H6,\n  InlineCode,\n  P,\n  List,\n  ListItem,\n  Pre,\n  BlockQuote,\n  Table,\n  TableHeaderCell,\n  TableBodyCell,\n  MarkdownBody\n} from 'gatsby-theme-ocular/components';\n\nconst CustomLinkWrapper = relativeLinks => {\n  const CustomLink = ({href, ...props}) => {\n    if (href.startsWith('http') || href.startsWith('#')) {\n      // TODO - we could style them differently though\n      return <A href={href} {...props} />;\n    }\n    const hrefWithoutLeadingSlash = href.startsWith('/') ? href.slice(1) : href;\n    return <A {...props} href={relativeLinks[hrefWithoutLeadingSlash]} />;\n  };\n  return CustomLink;\n};\n\nconst CustomPre = props => {\n  // the point of this component is to distinguish styling of inline <code /> elements\n  // with code blocks (ie <pre><code>...</code></pre>).\n\n  const {children, ...otherProps} = props;\n  return (\n    <Pre {...otherProps}>\n      {React.Children.map(children, child => {\n        // this means a child of this <pre> element is a <code> element, or <code> element styled\n        // by Styletron\n        if (\n          child.type === 'code' ||\n          child.type.displayName === 'Styled(code)'\n        ) {\n          return <CodeBlock {...child.props} />;\n        }\n        // else we just clone the element as is\n        return React.cloneElement(child);\n      })}\n    </Pre>\n  );\n};\n\n// Query for the markdown doc by slug\n// (Note: We could just search the allMarkdown from WebsiteConfig ourselves)\nexport const query = graphql`\n  query DocBySlug2($slug: String!) {\n    docBySlug2: markdownRemark(fields: {slug: {eq: $slug}}) {\n      htmlAst\n      timeToRead\n      excerpt\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n\nexport default class DocTemplate extends React.Component {\n  constructor(props) {\n    super(props);\n    const {relativeLinks} = props.pageContext;\n    // note - we can add many other custom components.\n\n    // without rehypeReact, we'd just render the content of the markdown as generated by gatsby.\n    // what this does is that instead we work on the Abstract Syntax Tree (htmlAST).\n    // this allows us to replace certain elements by custom components. For instance, if we\n    // detect an <h1> element, we will replace it with an H1 custom component. In that case\n    // H1 is just a styled version of h1. However, with that process we can implement custom\n    // logic. For instance we can rewrite the contents of the link on the fly (CustomLinkWrapper).\n    // we can style differently code tags which are within or without a <pre> element. And we can\n    // add many more such custom components as needed.\n    const renderAst = new rehypeReact({\n      createElement: React.createElement,\n      components: {\n        h1: H1,\n        h2: H2,\n        h3: H3,\n        h4: H4,\n        h5: H5,\n        h6: H6,\n        p: P,\n        ul: List,\n        li: ListItem,\n        pre: CustomPre,\n        code: InlineCode,\n        table: Table,\n        th: TableHeaderCell,\n        td: TableBodyCell,\n        blockquote: BlockQuote,\n        a: CustomLinkWrapper(relativeLinks)\n      }\n    }).Compiler;\n    this.state = {renderAst};\n  }\n\n  render() {\n    const {htmlAst} = this.props.data.docBySlug2;\n    const {renderAst} = this.state;\n    return (\n      <div>\n        <MarkdownBody>{renderAst(htmlAst)}</MarkdownBody>\n      </div>\n    );\n  }\n}\n"],"sourceRoot":""}