{"componentChunkName":"component---templates-documentation-jsx","path":"/docs/api/inspection","result":{"data":{"docBySlug2":{"htmlAst":{"type":"root","children":[{"type":"element","tagName":"h1","properties":{},"children":[{"type":"text","value":"Index inspection functions"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"These functions provide metadata about an H3 index, such as its resolution or base cell, and provide utilities for converting into and out of the 64-bit representation of an H3 index."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"h3GetResolution"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int h3GetResolution(H3Index h);\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Returns the resolution of the index."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"h3GetBaseCell"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int h3GetBaseCell(H3Index h);\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Returns the base cell number of the index."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"stringToH3"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"H3Index stringToH3(const char *str);\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Converts the string representation to "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"H3Index"}]},{"type":"text","value":" ("},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"uint64_t"}]},{"type":"text","value":") representation."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Returns 0 on error."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"h3ToString"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"void h3ToString(H3Index h, char *str, size_t sz);\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Converts the "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"H3Index"}]},{"type":"text","value":" representation of the index to the string representation. "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"str"}]},{"type":"text","value":" must be at least of length 17."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"h3IsValid"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int h3IsValid(H3Index h);\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Returns non-zero if this is a valid "},{"type":"element","tagName":"strong","properties":{},"children":[{"type":"text","value":"H3"}]},{"type":"text","value":" index."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"h3IsResClassIII"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int h3IsResClassIII(H3Index h);\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Returns non-zero if this index has a resolution with Class III orientation."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"h3IsPentagon"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int h3IsPentagon(H3Index h);\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Returns non-zero if this index represents a pentagonal cell."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h2","properties":{},"children":[{"type":"text","value":"h3GetFaces"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"void h3GetFaces(H3Index h, int* out);\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Find all icosahedron faces intersected by a given H3 index and places them in the array "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"out"}]},{"type":"text","value":". "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"out"}]},{"type":"text","value":" must be at least of length "},{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"maxFaceCount(h)"}]},{"type":"text","value":"."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Faces are represented as integers from 0-19, inclusive. The array is sparse, and empty (no intersection) array values are represented by -1."}]},{"type":"text","value":"\n"},{"type":"element","tagName":"h3","properties":{},"children":[{"type":"text","value":"maxFaceCount"}]},{"type":"text","value":"\n"},{"type":"element","tagName":"pre","properties":{},"children":[{"type":"element","tagName":"code","properties":{},"children":[{"type":"text","value":"int maxFaceCount(H3Index h3);\n"}]}]},{"type":"text","value":"\n"},{"type":"element","tagName":"p","properties":{},"children":[{"type":"text","value":"Returns the maximum number of icosahedron faces the given H3 index may intersect."}]}],"data":{"quirksMode":false}},"timeToRead":2,"excerpt":"Index inspection functions These functions provide metadata about an H3 index, such as its resolution or base cell, and provide utilitiesâ€¦","frontmatter":{"title":"Index inspection functions"}}},"pageContext":{"relativeLinks":{"docs/README":"/docs","../../../docs":"/docs","docs":"/docs","docs/usecases":"/docs/usecases","../../usecases":"/docs/usecases","docs/api/hierarchy":"/docs/api/hierarchy","../hierarchy":"/docs/api/hierarchy","docs/api/inspection":"/docs/api/inspection","../inspection":"/docs/api/inspection","docs/api/misc":"/docs/api/misc","../misc":"/docs/api/misc","docs/api/indexing":"/docs/api/indexing","../indexing":"/docs/api/indexing","docs/api/regions":"/docs/api/regions","../regions":"/docs/api/regions","docs/api/uniedge":"/docs/api/uniedge","../uniedge":"/docs/api/uniedge","docs/api/traversal":"/docs/api/traversal","../traversal":"/docs/api/traversal","docs/community/applications":"/docs/community/applications","../../community/applications":"/docs/community/applications","docs/community/bindings":"/docs/community/bindings","../../community/bindings":"/docs/community/bindings","docs/community/libraries":"/docs/community/libraries","../../community/libraries":"/docs/community/libraries","docs/community/tutorials":"/docs/community/tutorials","../../community/tutorials":"/docs/community/tutorials","docs/core-library/coordsystems":"/docs/core-library/coordsystems","../../core-library/coordsystems":"/docs/core-library/coordsystems","docs/core-library/filters":"/docs/core-library/filters","../../core-library/filters":"/docs/core-library/filters","docs/core-library/geoToH3desc":"/docs/core-library/geoToH3desc","../../core-library/geoToH3desc":"/docs/core-library/geoToH3desc","docs/core-library/h3ToGeoBoundaryDesc":"/docs/core-library/h3ToGeoBoundaryDesc","../../core-library/h3ToGeoBoundaryDesc":"/docs/core-library/h3ToGeoBoundaryDesc","docs/core-library/h3ToGeoDesc":"/docs/core-library/h3ToGeoDesc","../../core-library/h3ToGeoDesc":"/docs/core-library/h3ToGeoDesc","docs/core-library/h3indexing":"/docs/core-library/h3indexing","../../core-library/h3indexing":"/docs/core-library/h3indexing","docs/core-library/overview":"/docs/core-library/overview","../../core-library/overview":"/docs/core-library/overview","docs/core-library/restable":"/docs/core-library/restable","../../core-library/restable":"/docs/core-library/restable","docs/core-library/usage":"/docs/core-library/usage","../../core-library/usage":"/docs/core-library/usage"},"slug":"docs/api/inspection","toc":"docs"}}}